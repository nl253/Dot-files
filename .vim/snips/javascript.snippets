extends cfamily, node, jsdoc

snippet fori "For Loop [javascript]" b
for (let i of ${1:iterable}) {
  ${2:// do stuff here}
}
endsnippet

snippet fun(ct?)? "Function [javascript]" rb
function ${1:do_stuff}(${2:}) {
  ${3:// do stuff here}
}
endsnippet

snippet catch "Catch [javascript]"
catch(${2:err}) {
    ${3:// Block of code to handle errors}
} 
endsnippet

snippet try "Try Catch Finally [javascript]" b
try {
    ${1:// Block of code to try}
}
catch(${2:err}) {
    ${3:// Block of code to handle errors}
} 
finally {
    ${4:// Block of code to be executed regardless of the try / catch result}
}
endsnippet

snippet req "Require node.js module [javascript]"
require("${1:fs}")
endsnippet 

snippet mod "module.exports [javascript - node.js]"
module.exports = ${1:}
endsnippet 

snippet fori "For let i = 0 [javascript]"
for (let i = 0; i < ${1:iterable}.lenght; i++) {
  ${2:// do stuff here}
}
endsnippet

snippet "#!" "Shebang node.js [javascript]" rb
#!/usr/bin/env node --expose-http2 --harmony --harmony_typeof
endsnippet

snippet proto "Prototype (proto)"
${1:class_name}.prototype.${2:method_name} = function`!p snip.rv = space_before_function_paren(snip)`(${3:first_argument}) {
	${VISUAL}$0
}`!p snip.rv = semi(snip)`
endsnippet
