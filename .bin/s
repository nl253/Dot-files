#!/usr/bin/env python
# -*- coding: utf-8 -*-

# SCRIPT OUTLINE
# --------------
#
#   NOTE: the name is short on purpose, for easy access feel free to rename.
#
# FUNCTION
# --------
# look recursively in the dir pointed to by the `look_in` variable for a file
# that matches arguments (feel free to provide many) provided in the command
# line. They are converted to a string and matched against all files (not
# paths!) in the dir and dirs below it.
#
# If neither of the scores obtained from levenshtein distance is above
# `threshold` variable, then $EDITOR is opened with a new file (if in the
# command line you provided a few words, they will be joined into a single file
# name).
#
# USAGE EXAMPLES  : s arg1 [arg2, arg3 ... ]
# --------------
# s feedback finder.sh
# s todolist.sh
# s ip-show.sh
#
# DEPENDENCIES
# --------------
# python 3.5
# fuzzywuzzy (3rd party module)

import argparse
import glob
import os
import re
from fuzzywuzzy.fuzz import ratio
import subprocess
import functools


parser = argparse.ArgumentParser()

parser.add_argument(
    'files',
    metavar='FILE',
    nargs='+')

args = parser.parse_args()

# -------------------------------------------
# CUSTOMIZE
threshold = 35

# CUSTOMIZE
prefered_extension = '.sh'

# CUSTOMIZE
look_in = '~/Scripts/'

# CUSTOMIZE
script_extensions = '(sh)|(py)|(zsh)'

# -------------------------------------------

look_in = os.path.expandvars(os.path.expanduser(look_in))

alternative = "".join(args.files) + prefered_extension


stringified = "".join(map(lambda x: x + " ", args.files)) if len(args.files) > 1 else args.files[0]

scripts = [
    i
    for i in glob.glob(
        os.path.expanduser(os.path.join(look_in, '**')), recursive=True)
    if re.compile('\.' + script_extensions + '$').search(i)
]

reduced = functools.reduce(
    lambda x, y: x if ratio(x, stringified) > ratio(y, stringified) else y,
    [os.path.basename(i) for i in scripts])

subprocess.run([
    os.path.expandvars('${EDITOR}'),
    scripts[[os.path.basename(i) for i in scripts].index(reduced)]
    if ratio(reduced, stringified) >= threshold else os.path.join(look_in, alternative)
])
