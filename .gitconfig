[init]
    templatedir = ~/.git-templates

[user]
	email = norbertlogiewa96@gmail.com
	name = nl253

[diff]
    renames = copies  # Detect copies as well as renames
    tool = vimdiff

[merge]
	# Include summaries of merged commits in 
	# newly created merge commit messages
	tool = vimdiff
    conflictstyle = diff3

[help]
	# Automatically correct and execute mistyped commands
    autocorrect = 0  

[apply]
	# Detect whitespace errors when applying a patch
    whitespace = fix 

[color]
    ui = true

# best not to touch these (very legible as is)
[color "branch"]
    current = magenta bold
    local = normal
    remote = yellow

# best not to touch these (very legible as is)
[color "diff"]
    meta = "127"
    frag = magenta bold # line info
    old = "167" 		# deletions
    new = "78" 		    # additions

# best not to touch these (very legible as is)
[color "diff-highlight"]
    oldNormal = "167 bold"
    oldHighlight = "167 reverse"
    newNormal = "78"
    newHighlight = "78 reverse"

# best not to touch these (very legible as is)
[color "status"]
    added = green
    changed = "yellow bold"
    untracked = "normal bold"
    header = "white dim"
    nobranch = "red dim"

[core]
	# Use custom `.gitignore` and `.gitattributes`
    excludesfile = ~/.gitignore-global
    attributesfile = ~/.gitattributes
    whitespace = space-before-tab,-indent-with-non-tab,trailing-space
    compression = 9
    pager = less

[alias]

    # Be more explicit
    add = add -v
    branch = branch -vv
	cherry = cherry --verbose

	clean = "clean --interactive"

	root = rev-parse --show-toplevel

    aliases = "!git config -l | grep alias | sed 's/^alias\\.//g'"

    backup-untracked = "!git ls-files --others -i --exclude-standard | xargs zip untracked.zip"
    
    unpushed = log --branches --not --remotes

    # better format
	log = log --stat --format=\"________________________________________________________________%n%n%C(93)%H%n%n%C(184)%an%Creset [%ae] %C(173)%ar%Creset%n%n%C(204 bold)%s%Creset%n%b\"

	# pretter
	grep = grep --extended-regexp --line-number --color=always --full-name --heading --threads 16 --break

	tree = !git log --format=\"%C(93)%h%Creset [%C(173)%ad%Creset] %>|($(tput cols),trunc)%s\" --graph --all --date=short

    # List contributors with number of commits
    contributors = shortlog --summary --numbered  

    untracked = ls-files --others
	
    forward = "!git log --reverse --pretty=%H master | grep -A 1 $(git rev-parse HEAD) | tail -n1 | xargs git checkout"
    back = checkout HEAD^1

    # quick add unstaged, commit using "Quick Commit" as a message and push upstream.
    qq = "!bash -c 'command git pull && command git commit -a -m \"Automated commit. Nothing important ...\" && command git push'" 

    # form tpope
    recursive-update = "!sh -c 'find \"${@:-.}\" -type d -name .git -exec dirname {} \\; -exec git --git-dir={} remote update \\;' _"
    recursive-qq = "!find \"${@:-.}\" -type d -name .git -exec dirname {} \\; -exec git --git-dir={} qq \\;"

	# bundle repo
    archive-zip = "archive --format=zip --output=bundle.zip --verbose -9 HEAD"
    archive-tar = "archive --format=tar --output=bundle.tar --verbose HEAD"
	archive-7z = "!bash -c ' cd $(git rev-parse --show-toplevel) && 7z a -mx=9 bundle.7z -- $(git ls-files)'"


    # Find branches containing commit
    find-branch = "!f() { git branch -a --contains $1; }; f"  

    # Find tags containing commit
    find-tag = "!f() { git describe --always --contains $1; }; f"  

    # Find commits by source code
    find-commit = "!f() { git log --stat --format=\"________________________________________________________________%n%n%C(93)%H%n%n%C(184)%an%Creset [%ae] %C(173)%ar%Creset%n%n%C(204 bold)%s%Creset%n%b\" --date=short -S$1; }; f"

    # Find commits by commit message
	find-msg = "!f() { git log --stat --format=\"________________________________________________________________%n%n%C(93)%H%n%n%C(184)%an%Creset [%ae] %C(173)%ar%Creset%n%n%C(204 bold)%s%Creset%n%b\" --date=short --grep=$1; }; f"

    # Find commits by commit author
	find-author = "!f() { git log --stat --format=\"________________________________________________________________%n%n%C(93)%H%n%n%C(184)%an%Creset [%ae] %C(173)%ar%Creset%n%n%C(204 bold)%s%Creset%n%b\" --date=short --author=\"$1\"; }; f"

[web]
    browser = firefox-developer

[difftool]
    prompt = false

[credential]
    helper = store

[sendemail]
    smtpserver = smtp.gmail.com
    smtpserverport = 587
    smtpencryption = tls
    smtpuser = norbertlogiewa96@gmail.com

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true

# vim: ts=4 sw=4
