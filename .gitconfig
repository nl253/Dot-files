[init]
	templatedir = /home/norbert/.git-templates

[user]
	email = nl253@kent.ac.uk
	name = nl253

[diff]
	renames = copies  # Detect copies as well as renames
	tool = vimdiff

[merge]
	log = true  # Include summaries of merged commits in newly created merge commit messages
	# tool = vimdiff

[help]
	 # Automatically correct and execute mistyped commands
	autocorrect = 0  

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix 

[color]
	ui = true

[color "branch"]
	current = magenta bold
	local = normal
	remote = yellow

[color "diff"]
	meta = "127"
	frag = magenta bold # line info
	old = "167" # deletions
	new = "78" # additions

[color "diff-highlight"]
	oldNormal = "167 bold"
	oldHighlight = "167 reverse"
	newNormal = "78"
	newHighlight = "78 reverse"

[color "status"]
	added = green
	changed = "yellow bold"
	untracked = "normal bold"
	header = "white dim "
	nobranch = "red dim "

[core]
	# Use custom `.gitignore` and `.gitattributes`
	excludesfile = ~/.gitignore-global
	attributesfile = ~/.gitattributes

	# Treat spaces before tabs and all kinds of trailing whitespace as an error
	# [default] trailing-space: looks for spaces at the end of a line
	# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space

[alias]

	add = "add -v"

	back = "!function p() { git checkout HEAD^1 }; p"
	forward = "!function n() { git log --reverse --pretty=%H master | grep -A 1 $(git rev-parse HEAD) | tail -n1 | xargs git checkout }; n"

	# form tpope
	cherry-lick = !sh -c 'git checkout HEAD^{} -- && git cherry-pick \"$@\"' _
	recursive-update = "!sh -c 'find \"${@:-.}\" -type d -name .git -exec dirname {} \\; -exec git --git-dir={} remote update \\;' _"

	# quick add unstaged, commit using "Quick Commit" as a message and push upstream.
	qq = "!git add -u ; git commit -m \"Quick commit. Nothing important ...\" ; git push -u" 

	whatchanged = whatchanged --format=\"%n_________________________________________%n%n%C(93)%H%n%CresetAuthor: %C(yellow bold)%an%Creset [%ae]%nDate:   %C(173)%aD%Creset%n%n%C(204)%s%Creset%n%b\"

	 # long session, remember password for 120 min
	remember-long-session = "!git config --global credential.helper \"cache --timeout=120\"" 

	 # short session, remember password for 20 min
	remember = "!git config --global credential.helper \"cache --timeout=20\"" 

	blame = blame --pretty=full --date=rfc --indent-heuristic --color-words --dense --date-order --extended-regexp --minimal --show-number 
	
	 # List contributors with number of commits
	contributors = shortlog --summary --numbered  

	 # Credit an author on the latest commit
	credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"  

	branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes

	# FIND
	# -------------------
	find-branch = "!f() { git branch -a --contains $1; }; f"  # Find branches containing commit
	find-tag = "!f() { git describe --always --contains $1; }; f"  # Find tags containing commit
	# Find commits by source code
	find-commit = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"

	# Find commits by commit message
	find-message = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"
	
	# LOG
	# -------------------
 
	log = log --format=\"_________________________________________%n%n%C(93)%H%n%n%C(184)%an%Creset [%ae] %C(173)%ar%Creset%n%n%C(204 bold)%s%Creset%n%b\"
 
	# PUSH
	# -------------------
	remotes = remote -vu = pull --rebase upstream master

	 # Interactive rebase with the given number of latest commits
	reb = "!r() { git rebase -i HEAD~$1; }; r"  

	 # Remove the old tag with this name and tag the latest commit with it.
	retag = "!r() { git tag -d $1 && git push origin :refs/tags/$1 && git tag $1; }; r" 

[github]
	password = Kruszynka96**
	user = nl253

[web]
	browser = google-chrome-stable

# ---------------
# URL shorthands
# ---------------
[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
	insteadOf = "github:"

[url "git@gist.github.com:"]
	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
	insteadOf = "gist:"interactive = auto

[difftool]
	prompt = false

[credential]
	helper = cache --timeout=320

# vim: ts=4 sw=4
