
> SOFTWARE ENGINEERING

    >>> Stages

	1. Requirements
	2. Planning
	3. Testing

    >>> Approaches

	>>>> Waterfall

	>>>> Incremental

	>>>> Agile

	+ <https://en.wikipedia.org/wiki/Agile_software_development>
	+ pair programming
	+ scrum
	+ XP (Extreme Programming)

    >>> UML (System Modelling)

	>>>>> Resources 

	<http://www.uml-diagrams.org/use-case-diagrams-how-to.html>

	>>>> Interaction

	- Use Case diagrams

	>>>> Strucutral

	- Class diagrams

	>>>> Behavioural

	- Activity diagrams

	>>>>> Extra 

	- <http://plantuml.com/use-case-diagram>

    >>> Design Patterns

	>>>>> Resources

	<https://www.youtube.com/playlist?list=PLF206E906175C7E07>

	>>>>> Java

	<http://java-design-patterns.com/patterns/>

	>>>>> Python

	<http://www.blackwasp.co.uk/gofpatterns.aspx>

> JAVA

    >> Java Language

	>>> Resources

	default methods in interfaces
	    - <http://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html>
	java.lang.Enum
	    - <http://docs.oracle.com/javase/8/docs/technotes/guides/language/enums.html>
	reflection api
	    - <https://docs.oracle.com/javase/tutorial/reflect/index.html>
	<https://blog.logentries.com/2015/10/java-8-introduction-to-parallelism-and-spliterator/#refs>

    >> Collections (Data Structures)

	- java.util.Collections
	    + java.util.PriorityQueue
	    + java.util.Set
		- java.util.HashSet
	    + java.util.Map (Dictionary is obsolete)
		+ java.util.TreeMap
		+ java.util.HashMap
	    - java.util.List
	    - java.util.Iterator
	    - java.util.Splitterator
	    - java.util.Optional
	    - java.util.Serializable
	    - java.util.Tree

    >> Databases (SQL)

	>>> Tutorials

	jdbc <https://docs.oracle.com/javase/tutorial/jdbc/index.html>

	- java.sql
	    + java.sql.Connection
	    + java.sql.Statement
		# java.sql.PreparedStatement
	    + java.sql.ResultSet

    >> Concurrency

	>>> Resources
	<https://docs.oracle.com/javase/tutorial/essential/concurrency/forkjoin.html>

	- java.concurrent
	    + java.concurrent.CompletableFuture
	    + java.concurrent.Executors
	    + java.concurrent.ThreadPoolExecutor
	    + java.concurrent.FutureTask
	    + java.concurrent.ForkJoinPool

    >> Utils

	- java.util.Random
	- java.util.Objects

    >> IO

	>>> Resources
	<https://docs.oracle.com/javase/tutorial/essential/io/index.html>
	<http://docs.oracle.com/javase/7/docs/api/java/io/package-summary.html>

	- java.util.Scanner
	- java.io
	    + java.io.File
	- java.net
	- java.nio
	    + java.nio.URL

    >> String Processing

	- java.util.StringTokenizer
	- java.util.StringJoiner

    >> Stream API

	- java.util.stream
	    + java.util.stream.Stream
	    + java.util.stream.Collectors

    >> Archiving

    >>> JAR

    - java.util.jar
	+ java.util.zip.JarFile
	+ java.util.zip.JarEntry
	+ java.util.zip.JarOutputStream
	+ java.util.zip.JarInputStream

    >>> ZIP

    - java.util.zip
	+ java.util.zip.ZipFile
	+ java.util.zip.ZipEntry
	+ java.util.zip.ZipInputStream
	+ java.util.zip.ZipOutputStream
	+ java.util.zip.Inflater
	    # java.util.zip.InflaterInputStream
	    # java.util.zip.InflaterOutputStream
	+ java.util.zip.Deflater
	    # java.util.zip.DeflaterInputStream
	    # java.util.zip.DeflaterOutputStream
	+ java.util.zip.GZIPInputStream
	+ java.util.zip.GZIPOutputStream

    >> XML

	- xpath
	- java.xml

    >> Regular Expressions

	- java.util.regex <https://docs.oracle.com/javase/tutorial/essential/regex/index.html>
	    + java.util.regex.Pattern
	    + java.util.regex.Matcher

    >> Other

	- Annotations <http://docs.oracle.com/javase/8/docs/technotes/guides/language/annotations.html>
	- Static Imports <http://docs.oracle.com/javase/8/docs/technotes/guides/language/static-import.html>
	- Autoboxing <http://docs.oracle.com/javase/8/docs/technotes/guides/language/autoboxing.html>
	- Generics <http://docs.oracle.com/javase/8/docs/technotes/guides/language/generics.html>
	- Invariants <http://docs.oracle.com/javase/8/docs/technotes/guides/language/assert.html>
	- jaxp <https://docs.oracle.com/javase/tutorial/jaxp/index.html>
	- For-each Loop <http://docs.oracle.com/javase/8/docs/technotes/guides/language/foreach.html>
	- type annotations
	- Advanced Exception Handling <http://docs.oracle.com/javase/8/docs/technotes/guides/language/catch-multiple.html> <http://docs.oracle.com/javase/8/docs/technotes/guides/language/try-with-resources.html>


    >> Libraries

	>>> Testing

	JUnit

	>>> Parsing

	ANTLR4

    >> Java Tools

	- javadoc (`man javadoc`)
	- javac (`man javadoc`)
	- maven (`mvn -h`)
	- jar
	- MANIFEST
	- #SEE Apache Maven

> PYTHON

    >> Orm

    - SQLAlchemy <https://www.sqlalchemy.org/>

    >> XML

    - Lxml <http://lxml.de/>

    >> Data Analysis

	1. Numpy <http://www.numpy.org/>
	2. Pandas <https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html>

> COMPUTER SCIENCE

    >>> Resources

    <https://www.youtube.com/user/hhp3/videos>

    >> Complexity Theory

	>>>> Big O Notation

	+ time complexity
	+ manipulation, algebraic properties
	    * logarithms

	>>>> Algorithms (including Big O score)

	    >>> Resources
	    <https://github.com/tayllan/awesome-algorithms>

	    >>>>> Sorting 

	    + quicksort
	    + insertion sort
	    + bubble sort
	    + merge sort

	    >>>>> Searching

	    + binary search

    >> Concepts

	>>> Concurrency

	+ parallelism
	+ coroutines
	+ threads
	+ fibers
	+ subroutines
	+ multiprocessing vs multithreading

	>>> Operating Systems

	+ memory managment
	+ virtual memory (mapping)
	+ scheduling
	+ allocation of resources (cpu time, memory)
	+ processes in sandboxes
	+ fork() / spawn()
	+ system calls
	+ caching

	>>> Theory of Computation

	+ DFA
	+ FDA
	+ NP Complete
	+ Regular Languages
	    - regular expressions
		# PCRE <https://swtch.com/~rsc/regexp/regexp1.html>
		# POSIX extended vs basic
		# backtracking
	+ Turing Machines
	+ Graph Theory
	    - graph algorithms

	>>> Compression

	+ lossless
	    - techinques (tar vs zip vz jar ...)

	>>> Security

	+ Hashing Algorithms
	    - SHA (1, 2, 3, 256, 128, 512 ...)
	    - MD5SUM

	>>> Data Representation

	+ floating point numbers
	+ unicode (utf-8)

> DATABASES AND THE WEB

    >> Apache

    - configure cgi scripts (python, php, java ...)

    >> SQL

> OTHER

    >> GNU make

    <https://www.gnu.org/software/make/manual/html_node/index.html>

    >> Apache Maven

    <https://maven.apache.org/>

--- vim: conceallevel=3  nowrap
