#!/usr/bin/env bash

_fmt_heading() {
  cat <<EOF
$(tput bold)$(tput setaf 3)$*$(tput sgr0)
EOF
}

_fmt_error() {
  cat <<EOF
$(tput setaf 1)[ERROR] $*$(tput sgr0).
EOF
}

for i in sed grep cat; do
  if [[ ! -x $(command which $i) ]]; then
    _fmt_error "$i is not installed, cannot validate the commit message"
    exit 0
  fi
done

if [[ ! $BASH_VERSION =~ ^4 ]]; then
  _fmt_error "your bash(1) is outdated, cannot validate the commit message."
  exit 0
fi

commit_msg_file=$1

subject_line() {
  head -n 1 $commit_msg_file
}

line_count() {
  cat $commit_msg_file | command grep --count .
}

second_line() {
  head -n 2 $commit_msg_file
}

# the main message
message() {
  command sed -n "2,$(command grep --count $commit_msg_file)p" $commit_msg_file
}

error_msg() {
  cat <<EOF
$(_fmt_error "The commit message does not adhere to git style guide.")

$(_fmt_heading "THE RULES")

- the summary line should be descriptive yet succinct (max 50 characters)
- use imperative, present tense
- capitalize the subject 
- use printable characters
- don't use fullstops (periods) at the end (it's a title and not a sentence)

For details see <https://github.com/agis/git-style-guide#messages>

$(_fmt_heading "THE MESSAGE ")

"$(cat "$commit_msg_file" | grep -Ev '^#')"

$(_fmt_heading "ISSUE")
>> ${1}.

$(tput bold)Please fix it before re-comitting.$(tput sgr0)
EOF
}

# THE SUBJECT LINE
if [[ $(subject_line) =~ ^[[:space:]]+ ]]; then
  error_msg "Leading spaces in the subject"
  exit 1
fi
if [[ $(subject_line) =~ ^[a-z] ]]; then
  error_msg "Uncapitalised subject"
  exit 1
fi
if [[ ! $(subject_line) =~ ^[[:print:][:space:]]+$ ]]; then
  error_msg "Use of unprintable characters"
  exit 1
fi
if [[ $(subject_line) =~ [[:alpha:]]{3,}ed[[:space:]] ]]; then
  error_msg "Possible use of past tense"
  exit 1
fi
if [[ $(subject_line) =~ \.$ ]]; then
  error_msg "The subject ends with a fullstop (period)"
  exit 1
fi
if [[ $(subject_line) =~ .{51,} ]]; then
  error_msg "The subject is too long - max is 50 chars"
  exit 1
fi
if [[ $(subject_line) =~ \\t ]]; then
  error_msg "Use of tab"
  exit 1
fi

if [[ $(subject_line) =~ \ +$ ]]; then
  error_msg "Trailing spaces"
  exit 1
fi

# THE MESSAGE LINE
if (($(line_count) > 1)); then

  # more than just the subject, check for blank line
  if [[ ! $(second_line) =~ [[:space:]]* ]]; then
    error_msg "The second line needs to be blank"
    exit 1
  fi

  if [[ $(message) =~ ^[[:space:]]+ ]]; then
    error_msg "Leading spaces in the message body"
    exit 1
  fi

  if [[ $(message) =~ [[:alpha:]]{3,}ed[[:space:]] ]]; then
    error_msg "Possible use of past tense"
    exit 1
  fi

  for i in $(message); do
    if [[ $i =~ .{81} ]]; then
      error_msg "Over 80 characters on line:\n'$i'"
      exit 1
    fi
  done

fi

# ------------------------------------------------------------------------

command cat $commit_msg_file | command grep -E -v '^#' | fmt --uniform-spacing >/tmp/formatted_commit_msg_file.txt
command cat /tmp/formatted_commit_msg_file.txt >$commit_msg_file
command cat <<EOF

$(tput bold)The following commit message has been submitted$(tput sgr0)

$(command cat $commit_msg_file)
EOF
