# vim:sw=2:ts=4:expandtab:
[core]
    # Use custom `.gitignore` and `.gitattributes`
    excludesfile = ~/.config/git/gitignore
    compression  = 9
    abbrev       = 9
    whitespace   = cr-at-eol

[credential]
    helper   = store
    username = nl253

[init]
    templatedir = ~/.config/git/templates

[user]
    email = norbertlogiewa96@gmail.com
    name  = Norbert Logiewa

[help]
    # Automatically correct and execute mistyped commands
    autocorrect = 0  

[apply]
    # Detect whitespace errors when applying a patch
    whitespace = fix 

[alias]
    root      = rev-parse --show-toplevel
    tree      = !git log --format=\"%C(93)%h%Creset [%C(173)%ad%Creset] %>|($(tput cols),trunc)%s\" --graph --all --date='format:%d-%m-%g %R'
    unpushed  = log --branches --not --remotes
    ignored   = ls-files . --ignored --exclude-standard --others
    untracked = ls-files . --ignored --exclude-standard --others
    commits-since = "!for i in $(git branch --format='%(refname)' | sed -E 's/\\s+/\\n/'); do builtin printf \"%3d commits since $(builtin echo $i | sed -E 's/refs\\/heads\\///')\\n\" $(git log --format=oneline \"${i}..HEAD\" | grep --count ''); done | sort"

    untracked = "!git status --untracked-files --short | grep -E '^\\?' | sed -E 's/^(\\?{2}) //'"

    # bundle repo
    archive-zip = "archive --format=zip --output=bundle.zip --verbose HEAD"
    archive-tar = "archive --format=tar --output=bundle.tar --verbose HEAD"
    archive-7z  = "!bash -c ' cd $(git rev-parse --show-toplevel) && 7z a -mx=9 bundle.7z -- $(git ls-files)'"

    # Find branches containing commit
    find-branch = "!f() { git branch -a --contains $1; }; f; unset -f f"  

    # Find tags containing commit
    find-tag    = "!f() { git describe --always --contains $1; }; f; unset -f f"  

    # Find commits by source code
    find-commit = "!f() { git log --stat --date=short -S$1; }; f; unset -f f"

    # Find commits by commit message
    find-msg    = "!f() { git log --stat --date=short --grep=$1; }; f; unset -f f"

    # Find commits by commit author
    find-author = "!f() { git log --stat --date=short --author=\"$1\"; }; f ; unset -f f"

    # Use the following command while being on "master", to list merged branches:
    merged-branches = "!f() { command git branch --merged | grep -v \"\\*\"; }; f ; unset -f f" 

    # List contributors with number of commits
    contributors = shortlog --summary --numbered  

    # list aliases from this file
    aliases      = "!git config -l | grep alias | sed 's/^alias\\.//g' | sed -E 's/=/%%%/' | column --table --output-separator ' ' --separator '%%%'"

    # recursively update repos
    rec-pull = "!for i in $(find -type d -name '.git' -exec readlink  -f {} \\;); do git --no-pager -C \"$(dirname $i)\" pull; done"

[web]
    browser = google-chrome-beta

[difftool]
    prompt  = true

[diff]
    renames    = copies  # Detect copies as well as renames
    tool       = vimdiff
    context    = 1
    algorithm  = minimal
    colorMoved = dimmed_zebra
    wordRegex  = \\w+
    indentHeuristic = true

[merge]
    tool      = vimdiff
    verbosity = 1
    summary   = true

[sendemail]
    smtpserver     = smtp.gmail.com
    smtpserverport = 587
    smtpencryption = tls
    smtpuser       = norbertlogiewa96@gmail.com

[color]
    ui         = auto
    branch     = auto
    diff       = auto
    grep       = auto
    status     = auto
    showbranch = auto

# best not to touch these (very legible as is)
[color "branch"]
    current = magenta bold
    local   = normal
    remote  = yellow

# best not to touch these (very legible as is)
[color "diff"]
    meta = "127"
    frag = magenta bold # line info
    old  = "167"        # deletions
    new  = "78"         # additions

# best not to touch these (very legible as is)
[color "diff-highlight"]
    oldNormal    = "167 bold"
    oldHighlight = "167 reverse"
    newNormal    = "78"
    newHighlight = "78 reverse"

# best not to touch these (very legible as is)
[color "status"]
    added     = green
    changed   = "yellow bold"
    untracked = "normal bold"
    header    = "white dim"
    nobranch  = "red dim"

# best not to touch these (very legible as is)
[format]
    pretty = %C(184)%<|(8)%ad %C(93)%h %Creset%s%Creset

[gui]
    commitmsgwidth = 79
    fastcopyblame  = true
    fontui = -family \"Noto Sans\" -size 11 -weight normal -slant roman -underline 0 -overstrike 0
    fontdiff = -family \"Fira Code\" -size 12 -weight normal -slant roman -underline 0 -overstrike 0
    warndetachedcommit = true
    pruneduringfetch = true
    matchtrackingbranch = true
    diffopts = -w
    tabsize = 4

[instaweb]
    browser = google-chrome-unstable

[column]
    ui     = auto
    status = auto
    branch = auto

[pack]
    compression = 9
    threads     = 4

[log]
    abbrevCommit = true
    date         = format:%d-%m-%g %R

[pager]
    diff        = off
    shortlog    = off
    add         = off
    aliases     = off
    archive     = off
    branch      = off
    checkout    = off
    clone       = off
    commit      = off
    fetch       = off
    gc          = off
    grep        = off
    init        = off
    log         = off
    ls-files    = off
    ls-remote   = off
    merge       = off
    mktag       = off
    mv          = off
    pull        = off
    reflog      = off
    rm          = off
    show-branch = off
    stash       = off
    status      = off
    tag         = off

# vim: ts=4 sw=4 ft=gitconfig: 
[status]
    showUntrackedFiles = all
    short = true

[grep]
    threads     = 4
    patternType = extended
    lineNumber  = true

[color "grep"]
    match      = yellow
    filename   = magenta
    linenumber = green
    separator  = white
